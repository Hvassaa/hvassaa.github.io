window.SIDEBAR_ITEMS = {"fn":[["calculate_L_or_R","Auxilary function for computing L_j or R_j in step 24"],["commit_polyx","Pedersen vector commitment"],["compute_vanishing_polynomial","Compute vanishing polynomial over n-order multiplicative subgroup H with root of unity omega"],["hahsh",""],["inner_product","Inner product, between to equal length vectors of field elements"],["msm","Multiscalar multiplicatoin, auxiliary function for Pedersen vector commitment"],["rotate_polyx",""],["sigma","Implementation of the σ mapping from the protocol"],["step_1",""],["step_10","Step 10 This functions initializes the s sequence of length n_a and fills it with polynomials of degree n_e-1 made with legrange interpolation"],["step_11","Step 11 Get the list of Q’s (Q_0, …, Q_{n_q - 1})"],["step_12","Step 12 Get the list of q’s (q_0, …, q_{n_q - 1}) and q_blinds (accumulated blindness)"],["step_13","Step 13 Get the list of r’s (r_0, …, r_{n_q - 1})"],["step_14","Step 14 Get the commitment Q’, poly q’ and the blindness used"],["step_15","This function emulates sending a challenge. It takes a challenge and returns it again."],["step_16","Step 16 Get the u ∈ F^{n_q} vector"],["step_17","This function emulates sending a challenge. It takes a challenge and returns it again."],["step_18","Arguments"],["step_19","Step 19 Get the p(X) polynomial"],["step_2",""],["step_20","Step 20"],["step_21","Step 21"],["step_22","Step 22 Get the P’ curve-point/group-element"],["step_23","Step 23 Get the p’(X) polynomial and p’ blindness"],["step_24","Step 24"],["step_25","Step 25"],["step_26","Varifiers final check of the protocol"],["step_3",""],["step_4","Step 4 Beginning of the vanishing argument"],["step_5","Step 5 split polynomial of degree n_g(n-1)-n up into n_(g-2) polynomials of degree at most n-1"],["step_6","Step 6"],["step_7","Step 7 Computes the sum from step 7 in the protocol description"],["step_8","Step 8 This functions calculates h’(X) from the h_i parts created in step 5 and the challenge x"],["step_9","Step 9 This functions returns r(x) and creates a seq filled with a_i from the second part of step 9"]],"struct":[["PublicParams","A struct for the public parameters, pp Since the group and field is currently fixed, only G, U, W is represented"]],"type":[["CRS","Common Reference Struct"],["InputVar","A representation of input variable in multivariate polynomial"],["Term","A term in a multivariate polynomial"]]};